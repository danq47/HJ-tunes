###########################################################################
#!/bin/bash
###########################################################################
#
#PBS -A quill
#PBS -m abe
#PBS -M daniel.quill.14@ucl.ac.uk
#PBS -l nodes=1:ppn=4
###PBS -l procs=4
#PBS -q short
#
###########################################################################
#
nScripts=15
scriptNumber=1
nJobs=4
startSeed=$(((nJobs*(scriptNumber-1))+1))
endSeed=$((startSeed+nJobs-1))
do_lhef=1
do_p8=1
###########################################################################
#
echo -e "\nJob running parameters:\n"
echo -e "nJobs = $nJobs"
echo -e "Starting seed = $startSeed"
echo -e "Ending seed   = $endSeed  "
###########################################################################
# Get the name of the directory we're submitting this script from.
basedir=$PBS_O_WORKDIR
# Tell the current worker node to go into it.
cd $basedir
if [ ! -e log-files ] ; then
    mkdir log-files
fi
#
###########################################################################
#
# LHEF analysis
#
###########################################################################
if [ $do_lhef -eq 1 ] ; then

if [ $scriptNumber -eq 1 ] ; then
> Timings/Timings-LHEF-analysis.txt
(echo -n ' ' ) >> Timings/Timings-LHEF-analysis.txt    
(echo -n Starting LHEF analysis ' ' ; date ) >> Timings/Timings-LHEF-analysis.txt
fi

if [ ! -e lhef_analysis ] ; then
    echo ""
    echo "Cannot find lhef_analysis executable: Quitting."
    echo ""
    exit
fi

if [ -e LHEF-output ] ; then
    rm -rf LHEF-output
    echo ; echo "LHEF-output directory already exists: Deleting and remaking."; echo
    mkdir LHEF-output
else
    echo; echo "Making LHEF-output directory"
fi

mkdir lhef-analysis-$scriptNumber
cd lhef-analysis-$scriptNumber

cp ../lhef_analysis .
for i in `seq $startSeed $endSeed` ; do
    file=`sed -n '$ip' events | sed "s/\.tar\.gz//g"`
    cp ../$file.tar.gz .
    tar -xzvf $file.tar.gz
    log=lhef_analysis-$file.log
    echo $file | ./lhef_analysis >> $log &
done
wait

mv *.top $basedir/LHEF-output
mv *.log $basedir/log-files

cd $basedir
rm -rf lhef-analysis-$scriptNumber

if [ $scriptNumber -eq $nScripts ] ; then

(echo -n ' ' ) >> Timings/Timings-LHEF-analysis.txt
(echo -n Ending   LHEF analysis ' ' ; date ) >> Timings/Timings-LHEF-analysis.txt

fi

###########################################################################
#
# PYTHIA8 analysis
#
###########################################################################
if [ $do_py8 -eq 1 ] ; then

if [ $scriptNumber -eq 1 ] ; then
> Timings/Timings-P8-analysis.txt
(echo -n ' ' ) >> Timings/Timings-P8-analysis.txt    
(echo -n Starting P8 analysis ' ' ; date ) >> Timings/Timings-P8-analysis.txt
fi

if [ ! -e main31.cmnd ] || [ ! -e main-PYTHIA8_31-lhef ]; then
    echo ""
    echo "Cannot find main-PYTHIA8_31-lhef executable or cmnd file: Quitting."
    echo ""
    exit
fi

if [ -e PYTHIA8-output ] ; then
    rm -rf PYTHIA8-output
    echo ; echo "PYTHIA8-output directory already exists: Deleting and remaking."; echo
    mkdir PYTHIA8-output
else
    echo; echo "Making PYTHIA8-output directory"
fi

mkdir p8-analysis-$scriptNumber
cd p8-analysis-$scriptNumber

cp ../main-PYTHIA8_31-lhef .
cp ../main31.cmnd .
for i in `seq $startSeed $endSeed` ; do
    file=`sed -n '$ip' events | sed "s/\.tar\.gz//g"`
    cp ../$file.tar.gz .
    tar -xzvf $file.tar.gz
    log=p8_analysis-$file.log
    echo $file | ./main-PYTHIA8_31-lhef >> $log &
done
wait

mv *.top $basedir/PYTHIA8-output
mv *.log $basedir/log-files

cd $basedir
rm -rf p8-analysis-$scriptNumber

if [ $scriptNumber -eq $nScripts ] ; then

(echo -n ' ' ) >> Timings/Timings-P8-analysis.txt
(echo -n Ending   P8 analysis ' ' ; date ) >> Timings/Timings-P8-analysis.txt

fi

